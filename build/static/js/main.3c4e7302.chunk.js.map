{"version":3,"sources":["Components/Phonebook/Phonebook.module.css","Components/Filter/Filter.module.css","Components/Button/Button.module.css","Components/Alert/Alert.module.css","Components/transitions/slideAlert.module.css","Components/transitions/slide.module.css","Components/SectionTitle/SectionTitle.module.css","Components/transitions/pop.module.css","Components/transitions/slideLogo.module.css","redux/actionsTypes.js","redux/contactsActions.js","redux/contactsOperations.js","redux/contactsSelectors.js","Components/Hoc/withRenderLog.js","Components/Button/Button.js","Components/Alert/Alert.js","Components/Phonebook/Phonebook.js","Components/ContactsList/ContactListItem/ContactListItem.js","Components/ContactsList/ContactsList.js","Components/SectionTitle/SectionTitle.js","Components/Filter/FilterContainer.js","Components/Filter/Filter.js","App.js","redux/contactsReducer.js","redux/store.js","index.js","Components/ContactsList/ContactsList.module.css"],"names":["module","exports","Type","changeFilter","createAction","addState","dispatch","type","axios","get","then","response","newContacts","data","payload","catch","error","addStateError","removeContact","contactId","delete","removeContactSuccess","removeContactError","addContact","contact","post","addContactSuccess","addContactError","getContasts","state","contacts","getFilter","filter","withRenderLog","WrapperComponent","props","console","log","name","Button","value","onClick","className","styles","button","Alert","alert","defaultProps","Phonebook","number","isActiveErr","handleChange","e","target","setState","handleSubmit","id","uuidv4","preventDefault","onAddContact","handleEror","getExsistName","find","toLowerCase","includes","exsistName","this","wrapper","onSubmit","undefined","CSSTransition","in","timeout","unmountOnExit","classNames","slideTransition","label","input","onChange","placeholder","pattern","Component","compose","connect","contactsSelectors","contactsOperations","onRemoveContact","key","item","content","btn","close","ContactList","TransitionGroup","component","list","map","SectionTitle","title","onChangeFilter","App","isActive","getVisiableContacts","visiableContact","slideLogoTransition","mountOnEnter","length","popTransition","contactsActions","initialState","loading","contactsReducer","action","middleware","ReduxThunk","enhancer","applyMiddleware","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c4e7302.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Phonebook_wrapper__1DYxd\",\"label\":\"Phonebook_label__2zxD8\",\"input\":\"Phonebook_input__3Cs3s\",\"enter\":\"Phonebook_enter__1moMe\",\"enterActive\":\"Phonebook_enterActive__3MUQE\",\"exit\":\"Phonebook_exit__1mrk2\",\"exitActive\":\"Phonebook_exitActive__3Fb1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__Z84yE\",\"label\":\"Filter_label__19jWm\",\"input\":\"Filter_input__2CEsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__uv1mz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__fM2df\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideAlert_enter__1hf4z\",\"enterActive\":\"slideAlert_enterActive__LElVz\",\"exit\":\"slideAlert_exit__7z3dT\",\"exitActive\":\"slideAlert_exitActive__ZT7ao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2D3u_\",\"enterActive\":\"slide_enterActive__2JhQ_\",\"exit\":\"slide_exit__1uH4K\",\"exitActive\":\"slide_exitActive__1r7dg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SectionTitle_wrapper__KYFyH\",\"enter\":\"SectionTitle_enter__35iG-\",\"enterActive\":\"SectionTitle_enterActive__CykYn\",\"exit\":\"SectionTitle_exit__2W6Eh\",\"exitActive\":\"SectionTitle_exitActive__7Lyh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__glXYE\",\"enterActive\":\"pop_enterActive__3eLOn\",\"exit\":\"pop_exit__1h2V4\",\"exitActive\":\"pop_exitActive__14rqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideLogo_enter__1-O9Y\",\"enterActive\":\"slideLogo_enterActive__2Var0\",\"exit\":\"slideLogo_exit__Aluvt\",\"exitActive\":\"slideLogo_exitActive__3nUYj\"};","export const Type = {\n    ADD_STATE_START: 'ADD_STATE_START',\n    ADD_STATE_SUCCESS: 'ADD_STATE_SUCCESS',\n    ADD_STATE_ERROR: 'ADD_STATE_ERROR',\n\n    REMOVE_CONTACT_START: 'REMOVE_CONTACT_START',\n    REMOVE_CONTACT_SUCCESS: 'REMOVE_CONTACT_SUCCESS',\n    REMOVE_CONTACT_ERROR: 'REMOVE_CONTACT_ERROR',\n\n    ADD_CONTACT_START: 'ADD_CONTACT_START',\n    ADD_CONTACT_SUCCESS: 'ADD_CONTACT_SUCCESS',\n    ADD_CONTACT_ERROR: 'ADD_CONTACT_ERROR',\n\n    // ADD_CONTACT: 'ADD_CONTACT',\n    // REMOVE_CONTACT: 'REMOVE_CONTACT',\n    FILTER: 'FILTER'\n};\n\n","import { Type } from './actionsTypes';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addStateStart = () => ({\n    type: Type.ADD_STATE_START,\n});\n\nexport const addStateSuccess = (newContacts) => ({\n    type: Type.ADD_STATE_SUCCESS,\n    payload: newContacts,\n});\n\nexport const addStateError = (error) => ({\n    type: Type.ADD_STATE_ERROR,\n    payload: error,\n});\n\n// export const addState = (contactsLS) => ({\n//     type: Type.ADD_STATE,\n//     payload: contactsLS,\n// });\n\n// export const addState = createAction(Type.ADD_STATE);\n\n\nexport const addContactStart = () => ({\n    type: Type.ADD_CONTACT_START,\n});\n\nexport const addContactSuccess = (contact) => ({\n    type: Type.ADD_CONTACT_SUCCESS,\n    payload: contact,\n});\n\nexport const addContactError = (error) => ({\n    type: Type.ADD_CONTACT_ERROR,\n    payload: error,\n});\n\n// export const addContact = (contact) => ({\n//     type: Type.ADD_CONTACT,\n//     payload: contact,\n// });\n\n// export const addContact = createAction(Type.ADD_CONTACT);\n\n\nexport const removeContactStart = () => ({\n    type: Type.REMOVE_CONTACT_START,\n});\n\nexport const removeContactSuccess = (contactId) => ({\n    type: Type.REMOVE_CONTACT_SUCCESS,\n    payload: contactId,\n});\n\nexport const removeContactError = (error) => ({\n    type: Type.REMOVE_CONTACT_ERROR,\n    payload: error,\n});\n\n// export const removeContact = (contactId) => ({\n//     type: Type.REMOVE_CONTACT,\n//     payload: contactId,\n// });\n\n// export const removeContact = createAction(Type.REMOVE_CONTACT);\n\n// export const changeFilter = value => ({\n//     type: Type.FILTER,\n//     payload: value,\n// });\n\nexport const changeFilter = createAction(Type.FILTER);\n\n\n","import axios from 'axios';\n\nimport { addStateStart, addStateSuccess, addStateError, removeContactStart, removeContactSuccess, removeContactError, addContactStart, addContactSuccess, addContactError, } from './contactsActions';\n\nexport const addState = () => dispatch => {\n    dispatch(addStateStart());\n\n    axios.get('http://localhost:8081/contacts').then(response => {\n        dispatch(addStateSuccess(response.data))\n    }).catch(error => {\n        dispatch(addStateError(error));\n    });\n};\n\nexport const removeContact = (contactId) => dispatch => {\n    dispatch(removeContactStart());\n    axios.delete(`http://localhost:8081/contacts/${contactId}`).then(() => {\n        dispatch(removeContactSuccess(contactId))\n    }).catch(error => {\n        dispatch(removeContactError(error));\n    });\n};\n\nexport const addContact = (contact) => dispatch => {\n    dispatch(addContactStart());\n    axios.post('http://localhost:8081/contacts', contact).then(response => {\n        dispatch(addContactSuccess(response.data))\n    }).catch(error => {\n        dispatch(addContactError(error));\n    });\n};","// import { createSelector } from \"reselect\";\n\nexport const getContasts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\n// export const getCintactsWithoutRender = createSelector([getContasts, getFilter], (contacts, filter) => { contacts, filter });","import React from 'react';\n\nconst withRenderLog = WrapperComponent => props => {\n    console.log(`@${WrapperComponent.name} re-render`);\n    return <WrapperComponent {...props} />;\n};\nexport default withRenderLog;","import React from 'react';\nimport styles from './Button.module.css';\nimport PropTypes from 'prop-types';\n\n\nconst Button = ({ value, type, onClick }) => (\n    <button type={type} className={styles.button} onClick={onClick}>\n        {value}\n    </button>\n);\n\nexport default Button;\n\nButton.propTypes = {\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onClick: PropTypes.func,\n};\n\n","import React from 'react';\nimport styles from './Alert.module.css';\nimport PropTypes from 'prop-types';\n\n\nconst Alert = ({ error }) => (\n    <div className={styles.alert}>{error}</div>\n);\n\nexport default Alert;\n\nAlert.defaultProps = {\n    error: '',\n};\n\nAlert.propTypes = {\n    error: PropTypes.string.isRequired,\n};","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport withRenderLog from '../Hoc/withRenderLog'\nimport { connect } from 'react-redux';\nimport * as contactsSelectors from '../../redux/contactsSelectors';\nimport PropTypes from 'prop-types';\nimport styles from './Phonebook.module.css';\nimport Button from '../Button/Button';\nimport { CSSTransition } from 'react-transition-group';\nimport Alert from '../Alert/Alert';\nimport slideTransition from '../transitions/slideAlert.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nclass Phonebook extends Component {\n  state = {\n    name: '',\n    number: '',\n    error: '',\n    isActiveErr: false\n  };\n\n  handleChange = e => {\n\n    if (e.target.name === 'name') {\n      this.setState({\n        name: e.target.value,\n      });\n    } else\n      this.setState({\n        number: e.target.value,\n      });\n    this.setState({\n      isActiveErr: false\n    });\n  };\n\n  handleSubmit = e => {\n    const id = uuidv4();\n    e.preventDefault();\n    this.props.onAddContact({ ...this.state, id });\n    this.setState({ name: '', number: '' });\n  };\n\n  handleEror = e => {\n    e.preventDefault();\n    this.setState({\n      error: `${this.state.name} is already in contacts.`, isActiveErr: true\n    });\n  };\n\n  getExsistName = () => {\n    const name = this.state.name;\n    const { contacts } = this.props;\n    return contacts.find(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase()),\n    );\n  };\n\n  render() {\n    const exsistName = this.getExsistName();\n    const { name, number, error, isActiveErr } = this.state;\n\n    return (\n      <>\n        <form\n          className={styles.wrapper}\n          onSubmit={e => {\n            if (exsistName === undefined) {\n              this.handleSubmit(e);\n            } else this.handleEror(e)\n          }}\n        >\n          <CSSTransition in={isActiveErr} timeout={250} unmountOnExit classNames={slideTransition}>\n            <Alert error={error} />\n          </CSSTransition>\n\n          <label className={styles.label}>\n            Name\n            <input\n              className={styles.input}\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={styles.label}>\n            Number\n            <input\n              className={styles.input}\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"XXX-XX-XX\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            />\n          </label>\n          <Button value='Add contact' type='submit' onClick={this.onSubmit} />\n        </form>\n      </>\n    );\n  }\n};\n\n\nconst mapStateToProps = (state, props) => ({\n  contacts: contactsSelectors.getContasts(state),\n});\n\n// export default connect(mapStateToProps, null)(Phonebook);\n\nexport default compose(connect(mapStateToProps, null), withRenderLog)(Phonebook);\n\nPhonebook.defaultProps = {\n  contacts: [],\n};\n\nPhonebook.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styles from '../ContactsList.module.css';\nimport { connect } from 'react-redux';\n// import * as contactsActions from '../../../redux/contactsActions';\nimport * as contactsOperations from '../../../redux/contactsOperations';\n\nconst ContactListItem = ({ id, name, number, onRemoveContact }) => {\n    const removeContact = (e) => {\n        onRemoveContact(id)\n    }\n    return (\n        <li key={id} className={styles.item}>\n            <div className={styles.content}><span>{name}</span><span>{number}</span></div>\n            <button\n                type=\"button\"\n                className={styles.btn}\n                onClick={removeContact}\n            >\n                <div className={styles.close}>X</div>\n            </button>\n        </li >\n    )\n};\n\nconst mapDispatchToProps = dispatch => ({\n    removeContact: (contactId) => dispatch(contactsOperations.removeContact(contactId)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactListItem);","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport styles from './ContactsList.module.css';\nimport slideTransition from '../transitions/slide.module.css';\nimport ContactListItem from './ContactListItem/ContactListItem'\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <>\n    <TransitionGroup component=\"ul\" className={styles.list}>\n\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition key={id} timeout={250} unmountOnExit classNames={slideTransition}>\n          <ContactListItem id={id} name={name} number={number} onRemoveContact={onRemoveContact}\n          />\n          {/* <li key={id} className={styles.item}>\n            <div className={styles.content}><span>{name}</span><span>{number}</span></div>\n            <button\n              type=\"button\"\n              className={styles.btn}\n              onClick={() => onRemoveContact(id)}\n            >\n              <div className={styles.close}>X</div>\n            </button>\n          </li> */}\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </>\n);\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SectionTitle.module.css';\n\n\nconst SectionTitle = ({ title }) => {\n  return (<>\n\n    <h3 className={styles.wrapper}>{title}</h3>\n\n  </>\n  )\n};\n\nexport default SectionTitle;\n\nSectionTitle.defaultProps = {\n  title: '',\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { connect } from 'react-redux';\nimport Filter from './Filter';\n\n\nconst mapStateToProps = (state, props) => ({\n    value: state.filter,\n});\n\nexport default connect(mapStateToProps, null)(Filter);\n","import React from 'react';\n// import { connect } from 'react-redux';\n\n\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\n\nexport default function Filter({ value, onChangeFilter }) {\n\n  return (\n    <div className={styles.wrapper}>\n      <label className={styles.label}>\n        Find contact by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        />\n      </label>\n    </div>\n\n  );\n};\n\n// const mapStateToProps = (state, props) => ({\n//   value: state.filter,\n// });\n\n// export default connect(mapStateToProps, null)(Filter);\n\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport * as contactsActions from './redux/contactsActions';\nimport * as contactsOperations from './redux/contactsOperations';\nimport * as contactsSelectors from './redux/contactsSelectors';\nimport withRenderLog from './Components/Hoc/withRenderLog';\nimport Phonebook from './Components/Phonebook/Phonebook';\nimport ContactList from './Components/ContactsList/ContactsList';\nimport SectionTitle from './Components/SectionTitle/SectionTitle';\nimport Filter from './Components/Filter/FilterContainer';\nimport { CSSTransition } from 'react-transition-group';\nimport popTransition from './Components/transitions/pop.module.css';\nimport slideLogoTransition from './Components/transitions/slideLogo.module.css';\n\nclass App extends Component {\n  state = {\n    // contacts: [\n    //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    // ],\n    // filter: '',\n    isActive: false,\n  };\n\n\n  componentDidMount() {\n\n    this.setState({ isActive: true });\n    this.props.addState();\n    // const savedLSC = localStorage.getItem('contacts');\n    // const contactsLS = JSON.parse(savedLSC);\n    // // console.log(contactsLS);\n    // if (savedLSC) {\n    //   this.props.addState(contactsLS)\n    // };\n  };\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   // console.log('contacts componentDidUpdate');\n  //   // console.log('contacts prevProps.contacts', prevProps.contacts);\n  //   // console.log('this.props.contacts', this.props.contacts);\n  //   // if (prevState.contacts !== this.state.contacts) { localStorage.setItem('contacts', JSON.stringify(this.state.contacts)) };\n  // }\n\n\n  addContact = (contact) => {\n    this.props.addContact(contact)\n  };\n\n  // changeFilter = filter => {\n  //   this.setState({ filter });\n  // };\n\n  changeFilter = filter => {\n    this.props.changeFilter(filter);\n  };\n\n  getVisiableContacts = () => {\n    // const { contacts, filter } = this.state;\n    const contacts = this.props.contacts;\n    const filter = this.props.filter;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  // removeContact = contactId => {\n  //   this.setState(prev => {\n  //     return { contacts: prev.contacts.filter(({ id }) => id !== contactId) };\n  //   });\n  // };\n\n  removeContact = (contactId) => {\n    this.props.removeContact(contactId)\n  };\n\n  render() {\n    const contacts = this.props.contacts;\n    // const { contacts } = this.state;\n    const filter = this.props.filter;\n    // const { filter } = this.state;\n\n    const { isActive } = this.state;\n    const visiableContact = this.getVisiableContacts();\n\n    return (\n      <>\n        <CSSTransition in={isActive} timeout={500} classNames={slideLogoTransition} mountOnEnter unmountOnExit>\n          <SectionTitle title=\"Phonebook\" />\n        </CSSTransition>\n        <Phonebook onAddContact={this.addContact} contacts={contacts} />\n        <CSSTransition in={contacts.length > 1} timeout={250} unmountOnExit classNames={popTransition}>\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n        {visiableContact.length > 0 ? (\n          <ContactList\n            contacts={visiableContact}\n            onRemoveContact={this.removeContact}\n          />\n        ) : (\n            <ContactList\n              contacts={contacts}\n              onRemoveContact={this.removeContact}\n            />\n          )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  contacts: contactsSelectors.getContasts(state),\n  filter: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addState: () => dispatch(contactsOperations.addState()),\n  addContact: (contact) => dispatch(contactsOperations.addContact(contact)),\n  removeContact: (contactId) => dispatch(contactsOperations.removeContact(contactId)),\n  changeFilter: (filter) => dispatch(contactsActions.changeFilter(filter))\n});\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRenderLog)(App);","import { Type } from './actionsTypes';\n\n// import { createReducer } from '@reduxjs/toolkit';\n// import { addContact, removeContact, changeFilter } from './contactsActions';\n// import { addState } from './contactsOperations';\n\nconst initialState = {\n    contacts: [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    loading: false,\n    error: '',\n};\n\nconst contactsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Type.ADD_STATE_START:\n        case Type.REMOVE_CONTACT_START:\n        case Type.ADD_CONTACT_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case Type.ADD_STATE_SUCCESS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false,\n            };\n        case Type.ADD_STATE_ERROR:\n        case Type.REMOVE_CONTACT_ERROR:\n        case Type.ADD_CONTACT_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                loading: false,\n            };\n        case Type.ADD_CONTACT_SUCCESS:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload],\n                loading: false,\n            };\n        case Type.REMOVE_CONTACT_SUCCESS:\n            return {\n                ...state,\n                contacts: state.contacts.filter(({ id }) => id !== action.payload),\n                loading: false,\n            };\n        case Type.FILTER:\n            return {\n                ...state,\n                filter: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default contactsReducer;\n\n// export default createReducer(initialState, {\n//     [addState]: (state = initialState, action) => ({\n//         ...state,\n//         contacts: action.payload\n//     }),\n//     [addContact]: (state = initialState, action) => ({\n//         ...state,\n//         contacts: [...state.contacts, action.payload]\n//     }),\n//     [removeContact]: (state = initialState, action) => ({\n//         ...state,\n//         contacts: state.contacts.filter(({ id }) => id !== action.payload)\n//     }),\n//     [changeFilter]: (state = initialState, action) => ({\n//         ...state,\n//         filter: action.payload\n//     }),\n// });\n\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\n// import { devToolsEnhancer } from 'redux-devtools-extension';\nimport contactsReducer from './contactsReducer';\nimport ReduxThunk from 'redux-thunk';\n\nconst middleware = [ReduxThunk];\nconst enhancer = applyMiddleware(...middleware);\n\nconst store = createStore(contactsReducer, composeWithDevTools(enhancer));\n\n// const store = configureStore({\n//     reducer: contactsReducer,\n//     middleware: [ReduxThunk, ...getDefaultMiddleware()]\n// });\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store'\nimport './styles.css';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__CJiTZ\",\"item\":\"ContactsList_item__3sEFV\",\"content\":\"ContactsList_content__1L455\",\"close\":\"ContactsList_close__2ERI8\",\"btn\":\"ContactsList_btn__5K_PJ\"};"],"sourceRoot":""}